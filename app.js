// DeÄŸiÅŸkenler Variables========================================================================================

const yourChoice = document.getElementById("your-choice")
//benim seÃ§imimin id sini bir deÄŸiÅŸkene atadÄ±k.ğŸ‘†
const pcChoice = document.getElementById("pc-choice")
//pc nin seÃ§iminin id sini bir deÄŸiÅŸkene atadÄ±kğŸ‘†

const select = document.querySelector(".select")
//taÅŸ-kaÄŸÄ±t-makas hepsinin parenti olan select divini bir deÄŸiÅŸkene atadÄ±kğŸ‘†
let userSelect; // Bizim seÃ§imimiz i bir deÄŸiÅŸkende saklasÄ±n
let pcRandom; // Pc nin seÃ§imi i bir deÄŸiÅŸkende saklasÄ±n.

//score yazabilmek iÃ§in
const scoreYou = document.getElementById("you")
//id si you olan html elemetini bir deÄŸiÅŸkene atadÄ±k ki scorumuzu ordan artÄ±rÄ±p sonucunu ekrana yazabilelimğŸ‘†
const scorePc = document.getElementById("pc")
//id si pc olan html elemetini bir deÄŸiÅŸkene atadÄ±k ki pc nin scorunu ordan artÄ±rÄ±p sonucunu ekrana yazabilelimğŸ‘†
const domTopScore = document.querySelector(".top-score")
//classÄ± si top-score olan html elemetini bir deÄŸiÅŸkene atadÄ±k ki toplam scoru ekrana yazabilelimğŸ‘†

// Modal Selectors yani score belli olduÄŸunda kazandÄ± isem you win kaybetti isem you lost yazdÄ±rabilmek iÃ§in html de 4 tane elementi yakalamam gerekiyor.
const resultDiv = document.querySelector(".result-msg");
const containerEl = document.querySelector(".container");
const modalEl = document.querySelector(".modal-container");
const modalBtn = document.querySelector("#modal-ok");

//SonuÃ§ mesajÄ± iÃ§in
const final = document.getElementById("final");

// Event listeners =======================================================================================
// Ekrandan tÄ±klanan elemente gÃ¶re bizim seÃ§imimizi ekrana yazdÄ±rÄ±r.
//select divine eventlistener tÄ±klayarak gereksiz kalabalÄ±ÄŸÄ±n Ã¶nÃ¼ne geÃ§tik.ğŸ‘‡
select.addEventListener("click", (e) => {
    // console.log(e.target.className)--->target nereye tÄ±kladÄ±ÄŸÄ±mÄ± gÃ¶steriyor.targetinin classnameini yakalar.
    // console.log(e.target.getAttribute("alt"))--->tÄ±kladÄ±ÄŸÄ±m elementin target ile getattribute ni yakalarÄ±m .alt attributenu.
    // Bu if le boÅŸ tÄ±klamanÄ±n Ã¶nÃ¼ne geÃ§iyoruz.yani tÄ±kladÄ±ÄŸÄ±n yerin bir alt attribute u varsa burayÄ± devreye sok.eÄŸer yoksa fonksiyonu Ã§aÄŸÄ±rmÄ±yor.aksi takdirde boÅŸluÄŸa tÄ±kladÄ±ÄŸÄ±mÄ±zda da bir seÃ§im yapmÄ±ÅŸ gibi olur.
    if (e.target.getAttribute("alt")) {

        userSelect = e.target.getAttribute("alt")
        yourChoice.innerHTML = `<img src="${userSelect}.png"></img>`;
        pc()
        //benim seÃ§imimi ekrana getirecekğŸ‘†sonuna pc yazmamÄ±zÄ±n sebebi ben seÃ§imimi yaptÄ±m sÄ±rada pc nin seÃ§imi var
    }

})

const pcArr = ["tas", "kagit", "makas"]; //pc nin seÃ§enekleri iÃ§in bir deÄŸiÅŸken tanÄ±mladÄ±k

//Bu fonksiyon pc nin seÃ§iminin ekranda belirmesini saÄŸlar.
function pc() {
    pcRandom = pcArr[Math.floor(Math.random() * 3)];
    // pcRandom = 'tas'

    // console.log(pcRandom)
    pcChoice.innerHTML = `<img src="${pcRandom}.png"></img>`;
    result();
    //pc nin seÃ§imini ekrana foto olarak getirecek.ğŸ‘†sonuna result yazmamÄ±n sebebi pc seÃ§imini yaptÄ± sÄ±rada result var yani sonuÃ§
}

//result fonksiyonu maÃ§ sonucu hesaplayÄ±p 10 a ulaÅŸÄ±lÄ±nca maÃ§Ä± bitirecektir.//karÅŸÄ±laÅŸtÄ±rma yapacaÄŸÄ±z kendi seÃ§imimiz ile pc seÃ§imini o yÃ¼zden if yapÄ±sÄ± ve switch case kullanacaÄŸÄ±z

function result() {
    switch (userSelect) {
        case "tas":
            if (pcRandom == "kagit") {
                lost()
            } else if (pcRandom == "makas") {
                win()
            }
            break;

        case "kagit":
            if (pcRandom == "makas") {
                lost()
            } else if (pcRandom == "tas") {
                win()
            }
            break;
        case "makas":
            if (pcRandom == "tas") {
                lost()
            } else if (pcRandom == "kagit") {
                win()
            }
            break;

        default:
            break;
    }

//Beraberlik durumu yaptÄ±ÄŸÄ±mÄ±z her seÃ§imde beraberlik varsa yine ikinci class tanÄ±mlÄ±yoruz active classÄ± ve resultdivin innerhtml ine it's a draw yazdÄ±rÄ±yoruz.
    if (userSelect == pcRandom) {
        resultDiv.classList.add("active");
        resultDiv.innerHTML = "It's a draw"
        containerEl.style.boxShadow = "3px 3px 10px 1px #FFC538";
        resultDiv.style.backgroundColor = "#FFC538";
    }
// Biz oyunun sonunda  kazanÄ±rsak sonuÃ§ mesajÄ±nÄ± kazandÄ±nÄ±z olarak deÄŸiÅŸtirmek iÃ§in .benim scorumun innertext i 10 a eÅŸit ise sÃ¼slÃ¼nÃ¼n iÃ§erisindekileri yap.
    if (scoreYou.innerText == '10') {
        final.innerHTML = `ğŸ’ƒ You WinğŸ•º`
        document.querySelector(".modal").style.backgroundColor = "#5AB7AC"
        modalBtn.style.color = "#5AB7AC"
        topScoreCheck()
        //topscore fonksiyonu ile ben kazanÄ±rsam topscore getireceÄŸim ekrana
    }

    if(scorePc.innerText == '10' || scoreYou.innerText == '10'){
        modal()
    }

// ben veya pc 10 olursa bu maÃ§ bitsinğŸ‘†
}

//Biz her yaptÄ±ÄŸÄ±mÄ±z seÃ§imde kaybedersek bu fonksiyon Ã§aÄŸrÄ±lacak ve renkleri, mesajÄ± deÄŸiÅŸtirecek css eklenen ikinci active class ile
function lost() {
    resultDiv.classList.add("active") 
    resultDiv.innerHTML = "You Lost"
    containerEl.style.boxShadow = "3px 3px 10px 1px #fb778b";
    resultDiv.style.backgroundColor = "#fb778b";
    scorePc.innerText++;
}

//Biz her yaptÄ±ÄŸÄ±mÄ±z seÃ§imde kazanÄ±rsak bu fonksiyon Ã§aÄŸrÄ±lacak ve renkleri, mesajÄ± deÄŸiÅŸtirecek csse eklenen ikinci active class ile
function win() {
    resultDiv.classList.add("active")
    //kazanÄ±rsam 
    resultDiv.innerHTML = "You Win"
    containerEl.style.boxShadow = "3px 3px 10px 1px #5AB7AC";
    resultDiv.style.backgroundColor = "#5AB7AC";
    scoreYou.innerText++
}


// modal kullanÄ±mÄ± aÃ§.classÄ± modal olan kÄ±sma show classÄ±nÄ± aÃ§.  ben veya pc 10 olursa Ã§aÄŸÄ±racaÄŸÄ±m modal fonksiyonu .var olan modal classÄ±na show classÄ± ekledik
function modal(){
    modalEl.classList.add("show");
}

// moddal kapa sayfayÄ± yenile.modal butonuna tÄ±klandÄ±ÄŸÄ±nda window.location.reload kalÄ±p bir fonksiyondur sayfayÄ± yenile anlamÄ±na gelir.
modalBtn.addEventListener("click", ()=>{
    // modalEl.classList.remove("show");classÄ± show olan modal classÄ±nÄ± direkt ekrandan siler bÃ¶yle de olabilir.
    modalEl.style.display = "none";
    window.location.reload()
})


// local storage den high score u Ã§ek
let storagedScore = localStorage.getItem("highScore")
//local storageden highscore getir.
console.log(storagedScore)

let topScore; //ekrana yazdÄ±racaÄŸÄ±m deÄŸer.

//local storage git highscore getir eÄŸer highscore yoksa yani birinin birine Ã¼stÃ¼nlÃ¼ÄŸÃ¼ yoksa storagedscore Ã§aÄ±lÅŸmaz else kÄ±smÄ± devreye girer ve topscore 0-0 olur.
//local storage boÅŸ ise 0-0 yazdÄ±rmak iÃ§in
if(storagedScore){
    topScore = `10 - ${storagedScore}`
}else{
    topScore = "0 - 0"
}

// top score u dom a yazdÄ±r.
domTopScore.innerText = topScore;


function topScoreCheck(){
    storagedScore || localStorage.setItem("highScore", +scorePc.innerText )
    
    if (storagedScore >= scorePc.innerText) {
        localStorage.setItem("highScore", +scorePc.innerText);
        
    }

}














// kÃ¶tÃ¼ Ã¶rnek

/* const tasImage = document.querySelector(".tas")
const kagitImage = document.querySelector(".kagit");
const makasImage = document.querySelector(".makas");

tasImage.addEventListener('click',(e)=>{
    console.log(e)
    yourChoice.innerHTML = `<img src="./assets/tas.png"></img>`
})taÅŸa tÄ±klandÄ±ÄŸÄ±nda(seÃ§tiÄŸimde) taÅŸ resmi altta gÃ¶zÃ¼kecek

kagitImage.addEventListener('click',(e)=>{
    console.log(e)
    yourChoice.innerHTML = `<img src="./assets/kagit.png"></img>`;
})kaÄŸÄ±da tÄ±klandÄ±ÄŸÄ±nda (seÃ§tiÄŸimde) kaÄŸÄ±t fotosu altta gÃ¶zÃ¼kecek

makasImage.addEventListener('click',(e)=>{
    console.log(e)
    yourChoice.innerHTML = `<img src="./assets/makas.png"></img>`;
}) */ //makasa tÄ±kladÄ±ÄŸÄ±mda (seÃ§tiÄŸimde)makas foto Ã§Ä±kacak altta